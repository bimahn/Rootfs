name: Build Rootfs

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      builder_link:
        description: "Insert ImageBuilder Link"
        required: true
        default: ""

jobs:
  make_rootfs:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt update -y > /dev/null 2>&1
        sudo apt install net-tools make gawk git curl unzip bzip2 tar zstd -y > /dev/null 2>&1
        sudo apt install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt) > /dev/null 2>&1

    - name: Download Image Builder
      run: |
        wget -q "${{ github.event.inputs.builder_link }}" > /dev/null 2>&1

    - name: Extract Image Builder
      run: |
        filename=$(echo "${{ github.event.inputs.builder_link }}" | awk -F "/" '{print $NF}')
        no_extension=$(basename "$filename" | sed -E 's/\.tar\.zst$//')
        mkdir -p ${no_extension}
        
        # tar -xf ${filename} -C ${no_extension} --strip-components=1
        tar --use-compress-program=unzstd -xf ${filename}

        mv packages/* ${no_extension}/packages/
        mv files ${no_extension}
        chmod -R 755 ${no_extension}/files/*
        
        sed -i 's/option check_signature/# option check_signature/g' ${no_extension}/repositories.conf
        sed -i '/# src custom file:\/\/\/usr\/src\/openwrt\/bin\/armsr\/packages/a src/gz mutiara_wrt https://raw.githubusercontent.com/maizil41/mutiara-wrt-opkg/main/generic' ${no_extension}/repositories.conf      

        echo "dir_name=${no_extension}" >> $GITHUB_ENV
        
    - name: Build OpenWRT Rootfs
      run: |
        cd ${{ env.dir_name }}
        make image PROFILE="generic" PACKAGES=" \
        -dnsmasq -luci-theme-bootstrap \
        dnsmasq-full cgi-io libiwinfo libiwinfo-data libiwinfo-lua liblua liblucihttp liblucihttp-lua \
        libubus-lua lua luci luci-app-firewall luci-app-opkg luci-base luci-lib-base \
        luci-lib-ip luci-lib-jsonc luci-lib-nixio luci-mod-admin-full luci-mod-network \
        luci-mod-status luci-mod-system luci-proto-ipv6 luci-proto-ppp luci-ssl \
        luci-theme-material rpcd rpcd-mod-file rpcd-mod-iwinfo rpcd-mod-luci \
        rpcd-mod-rrdns uhttpd uhttpd-mod-ubus luci-compat \
        ath9k-htc-firmware btrfs-progs hostapd hostapd-utils kmod-ath kmod-ath9k kmod-ath9k-common \
        kmod-ath9k-htc kmod-cfg80211 kmod-crypto-acompress kmod-crypto-crc32c kmod-crypto-hash \
        kmod-fs-btrfs kmod-mac80211 wireless-tools wpa-cli wpa-supplicant libc \
        php8 php8-cgi php8-mod-session php8-mod-ctype php8-mod-fileinfo php8-mod-zip php8-mod-iconv php8-mod-mbstring \
        zoneinfo-core zoneinfo-asia nano htop unzip wget wget-ssl libmbedtls tar bash  \
        netdata httping coreutils-timeout kmod-usb-net-rndis iperf3 \
        usbutils kmod-usb-net-cdc-ether usb-modeswitch openssh-sftp-server kmod-usb2 \
        kmod-usb-net-huawei-cdc-ncm kmod-usb-serial-wwan \
        perlbase-file kmod-brcmutil perlbase-essential perlbase-utf8 \
        perlbase-file  perlbase-time perlbase-xsloader coreutils-stat sudo \
        luci-app-ttyd luci-app-openclash luci-app-amlogic luci-app-diskman \
        adb	atinout	chat	chinadns-ng	comgt	coreutils-base64	dbus	dns2socks	dtc	glib2	kmod-crypto-sha256	kmod-gpio-button-hotplug	kmod-inet-diag	kmod-leds-gpio	kmod-nf-socket	kmod-nf-tproxy	kmod-nft-socket	kmod-nft-tproxy	kmod-usb-acm	kmod-usb-net-asix-ax88179	kmod-usb-net-cdc-mbim	kmod-usb-net-qmi-wwan	kmod-usb-net-rtl8152	kmod-usb-serial-option	kmod-usb-serial-qualcomm	libdbus	libexpat	libffi	libgd	libjpeg-turbo	libmbim	libminiupnpc	libnatpmp1	libopenssl-conf	libpng	libqmi	libqrtr-glib	libsqlite3-0	libuci-lua	libwebp	luci-app-3ginfo-lite	luci-app-huawei-hilink	luci-app-nikki	luci-app-passwall	luci-app-sms-tool	luci-app-tailscale	luci-app-tinyfm	luci-app-vnstat2	luci-app-zerotier	luci-proto-mbim	luci-proto-modemmanager	luci-proto-qmi	luci-proto-xmm	luci-theme-alpha4	luci-theme-material3	microsocks	modeminfo	modeminfo-serial-xmm	modemmanager	nikki	openssl-util	qmi-utils	r8152-firmware	resolveip	screen	sms-tool	tailscale	tcping	umbim	uqmi	vnstat2	vnstati2	wwan	xmm-modem	yq	zerotier \
        " FILES="files" || true

    - name: Find Rootfs
      run: |
        FILE_PATH=$(find -name "*rootfs.tar.gz" | head -n 1)
        echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
        echo -e "Found Rootfs Path: $FILE_PATH"

    - name: Create Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      with:
        name: Mutiara-Wrt Rootfs
        tag_name: all
        draft: false
        prerelease: false
        files: |
              ${{ env.FILE_PATH }}
        body: |
              Kumpulan Rootfs
