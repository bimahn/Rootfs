name: Build Rootfs

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      builder_link:
        description: "Insert ImageBuilder Link"
        required: true
        default: ""

jobs:
  make_rootfs:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: |
        sudo apt update -y > /dev/null 2>&1
        sudo apt install net-tools make gawk git curl unzip bzip2 tar zstd -y > /dev/null 2>&1
        sudo apt install -y $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt) > /dev/null 2>&1

    - name: Download Image Builder
      run: |
        wget -q "${{ github.event.inputs.builder_link }}" > /dev/null 2>&1

    - name: Extract Image Builder
      run: |
        filename=$(echo "${{ github.event.inputs.builder_link }}" | awk -F "/" '{print $NF}')
        no_extension=$(basename "$filename" | sed -E 's/\.tar\.zst$//')
        mkdir -p ${no_extension}
        
        tar --use-compress-program=unzstd -xf ${filename}
        
        mv packages/* ${no_extension}/packages/
        mv files ${no_extension}
        chmod -R 755 ${no_extension}/files/*
        cd ${no_extension}
        
        # Disable signature check
        sed -i 's/option check_signature/# option check_signature/g' repositories.conf
        # Add custom repositories with duplicate check
        ! grep -q 'custom_aarch64' repositories.conf && echo 'src/gz custom_aarch64 https://raw.githubusercontent.com/lrdrdn/my-opkg-repo/main/aarch64_generic' >> repositories.conf
        ! grep -q 'custom_generic' repositories.conf && echo 'src/gz custom_generic https://raw.githubusercontent.com/lrdrdn/my-opkg-repo/main/generic' >> repositories.conf
        ! grep -q 'IceG_repo' repositories.conf && echo 'src/gz IceG_repo https://github.com/4IceG/Modem-extras/raw/main/myrepo' >> repositories.conf
        ! grep -q 'mutiara_wrt' repositories.conf && echo 'src/gz mutiara_wrt https://raw.githubusercontent.com/maizil41/mutiara-wrt-opkg/main/generic' >> repositories.conf
        
        echo "dir_name=${no_extension}" >> $GITHUB_ENV

    - name: Configure ROOTFS Partition Size
      run: |
        cd ${{ env.dir_name }}
        
        # Set ROOTFS partition size to 512MB in .config file
        echo "CONFIG_TARGET_ROOTFS_PARTSIZE=512" >> .config
        
        # Alternative: Modify existing CONFIG_TARGET_ROOTFS_PARTSIZE if it exists
        if grep -q "CONFIG_TARGET_ROOTFS_PARTSIZE" .config; then
          sed -i 's/CONFIG_TARGET_ROOTFS_PARTSIZE=.*/CONFIG_TARGET_ROOTFS_PARTSIZE=512/' .config
          echo "Modified existing ROOTFS_PARTSIZE configuration to 512MB"
        else
          echo "CONFIG_TARGET_ROOTFS_PARTSIZE=512" >> .config
          echo "Added new ROOTFS_PARTSIZE configuration: 512MB"
        fi
        
        # Show current configuration for verification
        echo "=== Current ROOTFS Configuration ==="
        grep -i "rootfs\|partsize" .config || echo "No existing ROOTFS config found"
        
        # Additional EXT4 configurations for better compatibility
        echo "CONFIG_TARGET_ROOTFS_EXT4FS=y" >> .config
        echo "CONFIG_TARGET_EXT4_RESERVED_PCT=0" >> .config
        echo "CONFIG_TARGET_EXT4_BLOCKSIZE_4K=y" >> .config
        echo "CONFIG_TARGET_EXT4_BLOCKSIZE=4096" >> .config
        
        echo "=== ROOTFS Configuration Applied ==="
        
    - name: Build OpenWRT Rootfs
      run: |
        cd ${{ env.dir_name }}
        make image PROFILE="generic" PACKAGES=" \
        adb ath9k-htc-firmware atinout base-files bash blkid block-mount btrfs-progs busybox \
        bzip2 ca-bundle cgi-io chat chinadns-ng comgt coreutils coreutils-base64 coreutils-nohup \
        coreutils-stat coreutils-timeout curl dbus dns2socks dosfstools dropbear dtc \
        e2fsprogs exfat-fsck exfat-mkfs fdisk firewall4 fstools fwtool getrandom glib2 hostapd \
        hostapd-common hostapd-utils htop httping ip-full iperf3 iw iwinfo jansson4 jq jshn jsonfilter \
        kernel kmod-acpi-mdio kmod-amazon-ena kmod-ath kmod-ath9k kmod-ath9k-common kmod-ath9k-htc \
        kmod-atlantic kmod-bcmgenet kmod-brcmutil kmod-cfg80211 kmod-crypto-acompress kmod-crypto-aead \
        kmod-crypto-blake2b kmod-crypto-ccm kmod-crypto-cmac kmod-crypto-crc32 kmod-crypto-crc32c \
        kmod-crypto-ctr kmod-crypto-gcm kmod-crypto-geniv kmod-crypto-gf128 kmod-crypto-ghash \
        kmod-crypto-hash kmod-crypto-hmac kmod-crypto-manager kmod-crypto-null kmod-crypto-rng \
        kmod-crypto-seqiv kmod-crypto-sha256 kmod-crypto-sha3 kmod-crypto-sha512 kmod-crypto-xxhash \
        kmod-dwmac-imx kmod-dwmac-rockchip kmod-dwmac-sun8i kmod-e1000e kmod-fixed-phy kmod-fs-btrfs \
        kmod-fs-exfat kmod-fs-msdos kmod-fs-ntfs kmod-fs-vfat kmod-fsl-dpaa1-net kmod-fsl-dpaa2-net \
        kmod-fsl-enetc-net kmod-fsl-fec kmod-fsl-mc-dpio kmod-fsl-pcs-lynx kmod-fsl-xgmac-mdio kmod-fuse \
        kmod-gpio-button-hotplug kmod-gpio-pca953x kmod-hwmon-core kmod-i2c-core kmod-i2c-mux \
        kmod-i2c-mux-pca954x kmod-inet-diag kmod-leds-gpio kmod-lib-crc-ccitt kmod-lib-crc16 kmod-lib-crc32c \
        kmod-lib-lzo kmod-lib-raid6 kmod-lib-xor kmod-lib-xxhash kmod-lib-zlib-deflate kmod-lib-zlib-inflate \
        kmod-lib-zstd kmod-libphy kmod-mac80211 kmod-macsec kmod-marvell-mdio kmod-md-linear kmod-md-mod \
        kmod-md-raid0 kmod-md-raid1 kmod-md-raid10 kmod-md-raid456 kmod-mdio-bcm-unimac kmod-mdio-bus-mux \
        kmod-mdio-devres kmod-mdio-gpio kmod-mii kmod-mvneta kmod-mvpp2 kmod-net-selftests kmod-nf-conntrack \
        kmod-nf-conntrack-netlink kmod-nf-conntrack6 kmod-nf-flow kmod-nf-log kmod-nf-log6 kmod-nf-nat \
        kmod-nf-reject kmod-nf-reject6 kmod-nf-socket kmod-nf-tproxy kmod-nfnetlink kmod-nft-core kmod-nft-fib \
        kmod-nft-nat kmod-nft-offload kmod-nft-socket kmod-nft-tproxy kmod-nls-base kmod-nls-cp437 \
        kmod-nls-cp932 kmod-nls-cp936 kmod-nls-cp950 kmod-nls-iso8859-1 kmod-nls-utf8 kmod-octeontx2-net \
        kmod-of-mdio kmod-pcs-xpcs kmod-phy-aquantia kmod-phy-broadcom kmod-phy-marvell kmod-phy-marvell-10g \
        kmod-phy-realtek kmod-phy-smsc kmod-phylib-broadcom kmod-phylink kmod-ppp kmod-pppoe kmod-pppox \
        kmod-pps kmod-ptp kmod-random-core kmod-regmap-core kmod-regmap-i2c kmod-renesas-net-avb \
        kmod-rtc-rx8025 kmod-sfp kmod-slhc kmod-stmmac-core kmod-tun kmod-usb-acm kmod-usb-core \
        kmod-usb-ehci kmod-usb-net kmod-usb-net-asix-ax88179 kmod-usb-net-cdc-ether kmod-usb-net-cdc-mbim \
        kmod-usb-net-cdc-ncm kmod-usb-net-huawei-cdc-ncm kmod-usb-net-qmi-wwan kmod-usb-net-rndis \
        kmod-usb-net-rtl8152 kmod-usb-serial kmod-usb-serial-option kmod-usb-serial-qualcomm \
        kmod-usb-serial-wwan kmod-usb-wdm kmod-usb2 kmod-vmxnet3 kmod-wdt-sp805 libacl libatomic1 \
        libattr libblkid1 libblobmsg-json20240329 libbpf1 libbz2-1.0 libc libcap libcomerr0 libcurl4 \
        libdbus libe2p2 libelf1 libevdev libexpat libext2fs2 libf2fs6 libfdisk1 libffi libgcc1 \
        libgcrypt libgd libgmp10 libgpg-error libiperf3 libiwinfo-data libiwinfo-lua libiwinfo20230701 \
        libjpeg-turbo libjson-c5 libjson-script20240329 liblua5.1.5 liblucihttp-lua liblucihttp-ucode \
        liblucihttp0 liblzma liblzo2 libmbedtls21 libmbim libminiupnpc libmnl0 libmount1 libnatpmp1 \
        libncurses6 libnetfilter-conntrack3 libnettle8 libnfnetlink0 libnftnl11 libnghttp2-14 \
        libnl-tiny1 libopenssl-conf libopenssl3 libparted libpcre2 libpng libpthread libqmi \
        libqrtr-glib libreadline8 librt libruby3.3 libsmartcols1 libsqlite3-0 libss2 libstdcpp6 \
        libubox20240329 libubus-lua libubus20250102 libuci-lua libuci20250120 libuclient20201210 \
        libucode20230711 libudebug libudev-zero libusb-1.0-0 libustream-mbedtls20201210 libuuid1 \
        libuv1 libwebp libwebsockets-full libxml2-16 libyaml libzip-openssl logd losetup lsblk \
        lua luci luci-app-diskman luci-app-firewall luci-app-package-manager luci-app-ttyd \
        luci-app-vnstat2 luci-base luci-compat luci-lib-base luci-lib-ip luci-lib-ipkg luci-lib-jsonc \
        luci-lib-nixio luci-light luci-lua-runtime luci-mod-admin-full luci-mod-network luci-mod-status \
        luci-mod-system luci-proto-ipv6 luci-proto-mbim luci-proto-modemmanager luci-proto-ppp \
        luci-proto-qmi luci-ssl luci-theme-bootstrap luci-theme-material mdadm microsocks mkf2fs \
        modemmanager mtd nano netdata netifd nftables-json ntfs-3g ntfs-3g-utils odhcp6c \
        odhcpd-ipv6only oniguruma5 openssh-sftp-server openssl-util openwrt-keyring opkg parted \
        partx-utils perl perlbase-base perlbase-bytes perlbase-class perlbase-config perlbase-cwd \
        perlbase-dynaloader perlbase-errno perlbase-essential perlbase-fcntl perlbase-file \
        perlbase-filehandle perlbase-i18n perlbase-integer perlbase-io perlbase-list perlbase-locale \
        perlbase-params perlbase-posix perlbase-re perlbase-scalar perlbase-selectsaver perlbase-socket \
        perlbase-symbol perlbase-tie perlbase-time perlbase-unicore perlbase-utf8 perlbase-xsloader \
        php8 php8-cgi php8-mod-ctype php8-mod-fileinfo php8-mod-iconv php8-mod-mbstring php8-mod-session \
        php8-mod-zip ppp ppp-mod-pppoe procd procd-seccomp procd-ujail pv px5g-mbedtls qmi-utils \
        r8152-firmware resolveip rpcd rpcd-mod-file rpcd-mod-iwinfo rpcd-mod-luci rpcd-mod-rrdns \
        rpcd-mod-ucode ruby ruby-bigdecimal ruby-date ruby-digest ruby-enc ruby-pstore ruby-psych \
        ruby-stringio ruby-yaml screen smartmontools sms-tool sudo tailscale tar terminfo ttyd ubox \
        ubus ubusd uci uclient-fetch ucode ucode-mod-fs ucode-mod-html ucode-mod-lua ucode-mod-math \
        ucode-mod-nl80211 ucode-mod-rtnl ucode-mod-ubus ucode-mod-uci ucode-mod-uloop uhttpd \
        uhttpd-mod-ubus umbim unzip uqmi urandom-seed urngd usbids usbutils usign uuidgen vnstat2 \
        vnstati2 wget-ssl wifi-scripts wireless-regdb wireless-tools wpa-cli wpa-supplicant wwan \
        xz xz-utils yq zerotier zlib zoneinfo-asia zoneinfo-core \
        atinout chinadns-ng dns2socks luci-app-tinyfm luci-proto-xmm modeminfo modeminfo-serial-xmm tcping xmm-modem \
        luci-app-3ginfo-lite luci-app-sms-tool \
        " FILES="files" || true

    - name: Find Rootfs
      run: |
        FILE_PATH=$(find -name "*rootfs.tar.gz" | head -n 1)
        echo "FILE_PATH=$FILE_PATH" >> $GITHUB_ENV
        echo -e "Found Rootfs Path: $FILE_PATH"

    - name: Create Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      with:
        name: OpenWRTX Rootfs
        tag_name: all
        draft: false
        prerelease: false
        files: |
              ${{ env.FILE_PATH }}
        body: |
              Kumpulan Rootfs
